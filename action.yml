name: 'Deploy to S3 and invalidate cloudfront cache'
description: 'Deploy to S3 and invalidate cloudfront cache'
branding:
  icon: 'cloud'
  color: 'orange'

on:
  workflow_call:
    inputs:
      envName: # STG, UAT, PROD
        required: true
        type: string
    secrets:
      ACCOUNT_ID:
        required: true
      AWS_ROLE_ARN:
        required: true
      BUCKET_NAME:
        required: true
      CLOUDFRONT_DISTRIBUTION_ID:
        required: true
      ROLE_SESSION_NAME:
        required: true

jobs:
  deploy-to-server:
    runs-on: ubuntu-latest

    steps:
      - name: Run Test cases
        run: npm run test:ci

      - name: Build App (${{ inputs.envName }})
        run: npm run build

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/GithubOpenIDConnect
          role-session-name: ${{ secret.ROLE_SESSION_NAME }}
          aws-region: 'ap-southeast-1'
      - id: stg-assume-role
        run: |
          eval $(aws sts assume-role --role-arn ${{ secrets.AWS_ROLE_ARN }} --role-session-name terraform --external-id ${{ secrets.EXTERNAL_ID }} | jq -r '.Credentials | "export AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)\nexport AWS_SESSION_TOKEN=\(.SessionToken)\n"')
          aws s3 sync ./build/ s3://${{ secrets.BUCKET_NAME }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
